import os
import zipfile
import img2pdf
from collections import defaultdict

# Get the user's Documents directory
documents_dir = os.path.join(os.path.expanduser('~'), 'Documents')

# Specify the directory containing JPEG files
jpeg_dir = os.path.join(documents_dir, 'ConvertJPEG')

# Specify the output directory for the PDF files
output_dir = jpeg_dir

# Ensure the JPEG directory exists
if not os.path.isdir(jpeg_dir):
    print(f"Directory not found: {jpeg_dir}")
else:
    # Ensure the output directory exists
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)

    # Dictionary to store grouped JPEG files by base name
    grouped_files = defaultdict(list)

    # Iterate over all JPEG files in the specified directory
    for root, _, files in os.walk(jpeg_dir):
        for file in files:
            if file.lower().endswith('.jpeg'):
                # Extract the base name before the underscore
                base_name = file.rsplit('_', 1)[0]
                grouped_files[base_name].append(os.path.join(root, file))

    # Iterate over each group of JPEG files and convert to PDF
    for base_name, jpeg_files in grouped_files.items():
        try:
            # Sort the files to maintain order
            jpeg_files.sort()
            
            # Create the PDF file path
            pdf_path = os.path.join(output_dir, f'{base_name}.pdf')

            # Convert JPEG files to a single PDF
            with open(pdf_path, "wb") as f:
                f.write(img2pdf.convert(jpeg_files))
            print(f"Created PDF: {pdf_path}")

            # Create a ZIP file with the same base name as the PDF
            zip_path = os.path.join(output_dir, f'{base_name}.zip')
            with zipfile.ZipFile(zip_path, 'w') as zipf:
                zipf.write(pdf_path, os.path.basename(pdf_path))
                print(f"Added to zip: {pdf_path}")
            print(f"Created ZIP file: {zip_path}")
        except Exception as e:
            print(f"An error occurred with JPEG files for base name {base_name}: {e}")

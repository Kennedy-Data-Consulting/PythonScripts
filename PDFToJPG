from pdf2image import convert_from_path
import os
import zipfile

# Get the user's Documents directory
documents_dir = os.path.join(os.path.expanduser('~'), 'Documents')

# Specify the directory containing PDF files
pdf_dir = os.path.join(documents_dir, 'ConvertPDF')

# Specify the output directory for the JPEG files
output_dir = pdf_dir

# Ensure the PDF directory exists
if not os.path.isdir(pdf_dir):
    print(f"Directory not found: {pdf_dir}")
else:
    # Ensure the output directory exists
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)

    # Iterate over all PDF files in the specified directory
    for filename in os.listdir(pdf_dir):
        if filename.endswith('.pdf'):
            pdf_path = os.path.join(pdf_dir, filename)
            pdf_basename = os.path.splitext(filename)[0]

            try:
                # Convert PDF to images
                pages = convert_from_path(pdf_path, 300)

                # List to store the paths of the generated JPEG files
                jpeg_files = []

                # Save each page as a JPEG file with the PDF base name
                for i, page in enumerate(pages):
                    output_path = os.path.join(output_dir, f'{pdf_basename}_{i+1}.jpeg')
                    page.save(output_path, 'JPEG')
                    jpeg_files.append(output_path)
                    print(f"Saved: {output_path}")

                # Create a ZIP file with the same base name as the PDF
                zip_path = os.path.join(output_dir, f'{pdf_basename}.zip')
                with zipfile.ZipFile(zip_path, 'w') as zipf:
                    for file in jpeg_files:
                        zipf.write(file, os.path.basename(file))
                        print(f"Added to zip: {file}")
                print(f"Created ZIP file: {zip_path}")
            except Exception as e:
                print(f"An error occurred with file {filename}: {e}")
